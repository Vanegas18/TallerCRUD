@model IEnumerable<TallerCRUD.Models.Categoria>

@{
    ViewData["Title"] = "Categorias";
}

<h1>Categorías</h1>

<p class="btn btn-primary">
    <a asp-action="Create" class="titulo">Crear nueva categoría</a>
</p>

<style>
    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #e0e0e0;
    }
</style>

<table class="table table-striped" id="example">
    <thead>
        <tr>
            <th style="text-align: center;">
                Codigo
            </th>
            <th style="text-align: center;">
                <a asp-action="Index" asp-route-filtro="@ViewData["FiltroNombre"]">
                    Nombre
                </a>
            </th>
            <th style="text-align: center;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.CodigoCategoria)
                </td>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td style="text-align: center;">
                    <div class="btn-group" role="group">
                        <a asp-action="Edit" class="btn btn-secondary" asp-route-id="@item.CodigoCategoria" style="margin-right: 5px;">Editar</a>
                        <a asp-action="Details" class="btn btn-info" asp-route-id="@item.CodigoCategoria" style="margin-right: 5px;">Detalles</a>
                        <form asp-action="DeleteConfirmed" method="post" style="display:inline;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.CodigoCategoria" />
                            <button type="button" class="btn btn-danger" onclick="confirmDelete(this)">Eliminar</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    // Función para confirmar eliminación de registro
    function confirmDelete(button) {
        Swal.fire({
            title: '¿Está seguro de eliminar el registro?',
            text: "¡No podrá revertir esto!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, eliminarlo'
        }).then((result) => {
            if (result.isConfirmed) {
                button.form.submit();
            }
        });
    }

    // Mostrar mensaje de error si existe
    @if (TempData["ErrorMessage"] != null)
    {
        <text>
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: '@TempData["ErrorMessage"]'
        });
        </text>
    }
    // Inicializar DataTable con configuraciones personalizadas
    new DataTable('#example', {
        dom: '',
        language: {
            search: "Buscar:" // Texto personalizado para el campo de búsqueda
        },
        layout: {
            topStart: {
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fa-solid fa-copy"></i>',
                        className: 'botonCopiar btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'csv',
                        text: '<i class="fa-solid fa-file-csv"></i>',
                        className: 'botonCsv btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fa-regular fa-file-excel"></i>',
                        className: 'botonExcel btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fa-solid fa-file-pdf"></i>',
                        className: 'botonPdf btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fa-solid fa-print"></i>',
                        className: 'botonPrint btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'colvis',
                        text: 'Filtrar',
                        className: 'botonColvis btn'
                    }
                ]
            }
        },
        scrollX: true, // Habilitar desplazamiento horizontal
        initComplete: function(json, settings) {
            $(".dt-buttons").removeClass("dt-buttons");
            $(".dt-button").addClass("botones");
        }
    });
</script>
